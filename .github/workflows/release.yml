name: release
on:
  push:
    tags:
      - 'v*'
      - '!v*-alpha*'
      - '!v*-beta*'
      - '!v*-rc*'

jobs:
  build-a333x:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      ZIP_NAME: headwindsim-aircraft-a330-300-release.zip
      BUILD_DIR_NAME: release
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/a333x/release
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: false
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> hdw-a333x/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hdw-a333x/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hdw-a333x/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hdw-a333x/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a333x.sh
      - name: Build A333X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a333x.sh --no-tty -j 4
          docker system prune -af
      - name: Build ZIP files
        run: |
          node ./scripts/fragment-a333x.js
          cp ./build-a333x/out/build-modules/modules.json ./build-a333x/out/headwindsim-aircraft-a330-300/install.json
          node ./scripts/install-source-a333x.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a333x/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME }} ./headwindsim-aircraft-a330-300/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a333x/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a333x/out/config
          echo "releases:" >> ./build-a333x/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a333x/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a333x/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a333x/out/config
  build-a339x:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      ZIP_NAME: headwindsim-aircraft-a330-900-release.zip
      BUILD_DIR_NAME: release
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/a339x/release
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> hdw-a339x/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hdw-a339x/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hdw-a339x/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hdw-a339x/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_a339x.sh
      - name: Build A339X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_a339x.sh --no-tty -j 4
          docker system prune -af
      - name: Build ZIP files
        run: |
          node ./scripts/fragment-a339x.js
          cp ./build-a339x/out/build-modules/modules.json ./build-a339x/out/headwindsim-aircraft-a330-900/install.json
          node ./scripts/install-source-a339x.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-a339x/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME }} ./headwindsim-aircraft-a330-900/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a339x/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-a339x/out/config
          echo "releases:" >> ./build-a339x/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-a339x/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-a339x/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-a339x/out/config
  build-su95x:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      ZIP_NAME: headwindsim-aircraft-su100-95-release.zip
      BUILD_DIR_NAME: release
      CLOUDFLARE_WORKER_PASSWORD: ${{ secrets.CLOUDFLARE_WORKER_PASSWORD }}
      CDN_BUCKET_DESTINATION: addons/su95x/release
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: false
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: false
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> hdw-su95x/.env
          echo CLIENT_ID=\"${{ secrets.NAVIGRAPH_CLIENT_ID }}\" >> hdw-su95x/.env
          echo CLIENT_SECRET=\"${{ secrets.NAVIGRAPH_CLIENT_SECRET }}\" >> hdw-su95x/.env
          echo SENTRY_DSN=\"${{ secrets.SENTRY_DSN }}\" >> hdw-su95x/.env
          echo BUILD_DIR_NAME=${{ env.BUILD_DIR_NAME }} >> .env
          echo LOCALAZY_READ_KEY=${{ secrets.LOCALAZY_READ_KEY }} >> .env
          echo VITE_BUILD=false >> .env
      - name: Setup Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh --clean
      - name: Copy Sources
        run: |
          ./scripts/dev-env/run.sh ./scripts/copy_su95x.sh
      - name: Build SU95X Package
        run: |
          ./scripts/dev-env/run.sh ./scripts/build_su95x.sh --no-tty -j 4
          docker system prune -af
      - name: Build ZIP files
        run: |
          node ./scripts/fragment-su95x.js
          cp ./build-su95x/out/build-modules/modules.json ./build-su95x/out/headwindsim-aircraft-su100-95/install.json
          node ./scripts/install-source-su95x.js
          mkdir ./${{ env.BUILD_DIR_NAME }}
          cd ./build-su95x/out/
          zip -r ../../${{ env.BUILD_DIR_NAME }}/${{ env.ZIP_NAME }} ./headwindsim-aircraft-su100-95/
          cd ../../
      - name: Upload to CloudFlare CDN
        run: |
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-su95x/out/build-modules
      - name: Upload Release Config to CloudFlare CDN
        run: |
          mkdir -p ./build-su95x/out/config
          echo "releases:" >> ./build-su95x/out/config/releases.yaml
          echo "  - name: $GITHUB_REF_NAME" >> ./build-su95x/out/config/releases.yaml
          echo "    date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> ./build-su95x/out/config/releases.yaml
          ./scripts/cdn.sh $CDN_BUCKET_DESTINATION ./build-su95x/out/config